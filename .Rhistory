#' https://twitter.com/EamonCaddigan/status/646759751242620928
#' based mostly on copy/pasting from ggplot2 geom_violin source:
#' https://github.com/hadley/ggplot2/blob/master/R/geom-violin.r
#' @examples:
#' ggplot(diamonds, aes(cut, carat)) +
#'   geom_flat_violin() +
#'   coord_flip()
#' @import ggplot2
geom_flat_violin <- function(mapping = NULL, data = NULL, stat = "ydensity",
position = "dodge", trim = TRUE, scale = "area",
show.legend = NA, inherit.aes = TRUE, ...) {
layer(
data = data,
mapping = mapping,
stat = stat,
geom = GeomFlatViolin,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(
trim = trim,
scale = scale,
...
)
}
#' @rdname ggplot2-ggproto
#' @format NULL
#' @usage NULL
#' @export
GeomFlatViolin <-
ggproto("GeomFlatViolin", Geom,
setup_data = function(data, params) {
data$width <- data$width %||%
params$width %||% (resolution(data$x, FALSE) * 0.9)
# ymin, ymax, xmin, and xmax define the bounding rectangle for each group
data %>%
group_by(group) %>%
mutate(ymin = min(y),
ymax = max(y),
xmin = x,
xmax = x + width / 2)
},
draw_group = function(data, panel_scales, coord) {
# Find the points for the line to go all the way around
data <- transform(data, xminv = x,
xmaxv = x + violinwidth * (xmax - x))
# Make sure it's sorted properly to draw the outline
newdata <- rbind(plyr::arrange(transform(data, x = xminv), y),
plyr::arrange(transform(data, x = xmaxv), -y))
# Close the polygon: set first and last point the same
# Needed for coord_polar and such
newdata <- rbind(newdata, newdata[1,])
ggplot2:::ggname("geom_flat_violin", GeomPolygon$draw_panel(newdata, panel_scales, coord))
},
draw_key = draw_key_polygon,
default_aes = aes(weight = 1, colour = "grey20", fill = "white", size = 0.5,
alpha = NA, linetype = "solid"),
required_aes = c("x", "y")
)
"%||%" <- function(a, b) {
if (!is.null(a)) a else b
}
###########################################################
# plotting function
plotter <- function(data, x , y, z, xlabel, ylabel, title){
library(tidyverse)
library(ggthemes)
library(gghalves)
library(ggalt)
library(ggrepel)  # for annotations
library(viridis)  # for nice colors
library(broom)  # for cleaning up models
library(treemapify)  # for making area graphs
library(wesanderson)  # for nice colors
ggplot(data = data, mapping = aes(x = reorder({{x}}, {{y}}, median_n),
y = {{y}}, fill = {{z}})) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.8, aes(fill = {{z}})) +
geom_half_violin(position = position_nudge(x = 0.2, y = 0), alpha = 0.8) +
geom_point(position = position_jitter(width = 0.15), size = 1, alpha = 0.1) +
scale_y_log10() + labs(y = ylabel, x = xlabel,
title = title) +
theme_niwot() +
theme(legend.position = "none") +
stat_summary(fun = mean, geom = "point",
size = 1, color = "red")}
##################################################
second_plotter <- function(data, x , y, z, xlabel, ylabel, title){
library(ggalt)
library(ggrepel)  # for annotations
library(viridis)  # for nice colours
library(broom)  # for cleaning up models
# devtools::install_github("wilkox/treemapify")
library(treemapify)  # for making area graphs
library(wesanderson)  # for nice colours
ggplot(data = data,
mapping = aes(x = reorder({{x}}, {{y}}, median_n), y = {{y}}, fill = {{z}})) +
# The half violins
geom_flat_violin(position = position_nudge(x = 0.2, y = 0), alpha = 0.8) +
# The points
geom_point(aes(y = {{y}}, color = {{x}}),
position = position_jitter(width = 0.15), size = 1, alpha = 0.1) +
# The boxplots
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.8) +
# \n adds a new line which creates some space between the axis and axis title
labs(x = xlabel, y = ylabel, title = title) +
# Removing legends
guides(fill = FALSE, color = FALSE) +
# Setting the limits of the y axis
#scale_y_continuous(limits = c(0, 1.2)) +
# Picking nicer colours
scale_fill_manual(values = c("#5A4A6F", "#E47250",  "#EBB261", "#9D5A6C", "#FFFF80FF")) +
scale_colour_manual(values = c("#5A4A6F", "#E47250",  "#EBB261", "#9D5A6C", "#FFFF80FF")) +
theme_niwot() + scale_y_log10()
}
##################################################
# plotting scatter diagrams
plotter_scatter <- function(data, x, y, z,
xlab, ylab, title) {
# Load libraries
library(tidyverse)
library(gghalves)
library(ggeasy)
library(ggthemes)
# write the function
data %>% ggplot(aes(x = {{x}}, y = {{y}}, col = {{z}})) +
geom_point(shape = 1, size = 2) +
labs(x = xlab, y = ylab, title = title)
}
## Current legal status vs age
(my_data %>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(currentlegalstatus)), fill = age)) +
geom_bar() + scale_fill_brewer(palette = 7) +
labs(x = "", y = "Count",
title = "Panel A: Current Legal Status by Age") +
theme(legend.title = element_blank(), legend.position = "top") +
## Current legal status vs legal tradition
my_data %>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(currentlegalstatus)),
fill = legal_tradition)) +
geom_bar() +
scale_fill_brewer(palette = 2) +
labs(x = "", y = "",
title = "Panel B: Current Legal Status by Legal Tradition") +
theme(legend.title = element_blank(), legend.position = "top")) /
## Current legal status vs region
(my_data %>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(currentlegalstatus)),
fill = region)) +
geom_bar() +
scale_fill_brewer(palette = 9) +
labs(x = "Current Legal Status", y = "Count",
title = "Panel C: Current Legal Status by Region") +
theme(legend.title = element_blank(), legend.position = "top") +
## Current legal status vs assets
second_plotter(my_data, x = fct_reorder(currentlegalstatus, assets, median),
y = assets, z = currentlegalstatus, xlabel = "Current Legal Status",
ylabel = "Assets", title = "Panel D: Assets of MFIs by Legal Status"))  +
plot_annotation(title = "", caption = "Source: Authors' construction from MIX data")
#######################################
## Current legal status vs governance
(second_plotter(my_data, x = fct_reorder(currentlegalstatus, kkm), y = kkm,
z = currentlegalstatus,
xlabel = "Legal Status", ylabel = "Country Governance Index (KKM)",
title = "Panel A: Country Level Governance and MFI legal status") +
######################################
## Current legal status vs stock market capitalization
second_plotter(my_data, x = fct_reorder(currentlegalstatus, stmktcap), y = stmktcap,
z = currentlegalstatus,
xlabel = "Legal Status", ylabel = "Stock Market Development",
title = "Panel B: Stock Market Development and Legal Status of MFIs")) /
################################################
## Current legal status vs Private credit to GDP
(second_plotter(my_data, x = fct_reorder(currentlegalstatus, pcrdbgdp), y = pcrdbgdp,
z = currentlegalstatus,
xlabel = "Legal Status", ylabel = "Private Credit to GDP",
title = "Panel C: Private Credit to GDP and Legal Status of MFIs") +
## Current legal status vs GDP growth
second_plotter(my_data, x = fct_reorder(currentlegalstatus, gdp_growth_annual),
y = gdp_growth_annual,
z = currentlegalstatus,
xlabel = "Legal Status", ylabel = "GDP Growth Rates (% Annual)",
title = "Panel D: GDP Growth Rates and Legal Status of MFIs")) +
plot_annotation(title = "", caption = "Source: Authors' construction from MIX data \n
Arranged in Ascending order of the median score")
## Summary statistics for factor variables
my_data %>%
select(currentlegaldummy, currentlegalstatus,
age, legal_tradition, region) %>%
skim_without_charts() %>%
select(-complete_rate, -skim_type, -factor.ordered,
-n_missing, -factor.n_unique) %>%
rename(Variable = skim_variable,
Counts = factor.top_counts) %>%
kableExtra::kbl(., caption = "Summary statistics for categorical variables",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE) %>%
footnote(general = "Authors' construction from MIX data",
general_title = "Source: ")
## Summary statistics for numeric variables
my_data %>%
select(assets, kkm, education,
pcrdbgdp, stmktcap, prbonds, gdp_growth_annual) %>%
skim_without_charts() %>%
select(-skim_type, -n_missing) %>%
rename(Variable = skim_variable, Complete = complete_rate,
Mean = numeric.mean, SD = numeric.sd,Min = numeric.p0,
Q1 = numeric.p25, Median = numeric.p50, Q3 = numeric.p75,
Max = numeric.p100) %>%
kbl(., caption = "Summary statistics for numeric variables",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE) %>%
footnote(general = "Authors' construction from MIX data",
general_title = "Source: ")
prop.table(table(my_data$legal_tradition, my_data$currentlegalstatus),1) %>%
kbl(., caption = "Legal Status of MFIs in Africa by Disaggregated by Legal Tradition",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE) %>%
footnote(general = "Authors' construction from MIX data",
general_title = "Source: ",
number = "Horizontals total to 100",
number_title = "Note: ")
prop.table(table(my_data$age, my_data$currentlegalstatus),1) %>%
kbl(., caption = "Legal Status of MFIs in Africa by Disaggregated by Age",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE) %>%
footnote(general = "Authors' construction from MIX data",
general_title = "Source: ")
my_data %>%
group_by(age) %>%
summarize(Min_size = min(assets),
Mean_size = mean(assets),
Median_size = median(assets),
Max_size = max(assets)) %>%
rename(Age = age) %>%
kbl(., caption = "Size (Assets) of MFIs in Africa by Disaggregated by Age",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE) %>%
footnote(general = "Authors' construction from MIX data",
general_title = "Source: ")
my_data %>%
count(legal_tradition, currentlegalstatus) %>%
group_by(currentlegalstatus) %>%
mutate(prop = n / sum(n)* 100) %>%
select(-n) %>%
pivot_wider(names_from = currentlegalstatus, values_from = prop) %>%
kbl(., caption = "Breakdown of Legal Status of MFIs by Legal Traditions, Percent",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE) %>%
footnote(general = "Authors' construction from MIX data",
general_title = "Source: ",
number = "Verticals total to 100",
number_title = "Note: ")
my_data %>%
group_by(region) %>%
summarize(Min = min(kkm, na.rm = TRUE),
Mean = mean(kkm, na.rm = TRUE),
Median = median(kkm, na.rm = TRUE),
Max = max(kkm, na.rm = TRUE)) %>%
rename(Region = region) %>%
mutate(Region = case_when(Region == "Africa" ~ "Sub-Saharan Africa",
TRUE ~ "North Africa")) %>%
kbl(., caption = "Summary Statistics on Governance in Africa",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE) %>%
footnote(general = "Authors' construction from MIX data",
general_title = "Source: ")
my_data %>%
group_by(currentlegalstatus) %>%
summarize(Min = min(kkm, na.rm = TRUE),
Mean = mean(kkm, na.rm = TRUE),
Median = median(kkm, na.rm = TRUE),
Max = max(kkm, na.rm = TRUE)) %>%
kbl(., caption = "Institutional Quality (KKM) and Legal Status of MFIs in Africa",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE) %>%
footnote(general = "Authors' construction from MIX data",
general_title = "Source: ")
#################################################
original_data <- read_csv("amelia.csv") %>%
janitor::clean_names()
#################################################
original_data %>%
group_by(currentlegalstatus) %>%
summarise(Mean = mean(capital_asset_ratio, na.rm = TRUE),
Median = median(capital_asset_ratio, na.rm = TRUE)) %>%
rename(`Legal Status` = currentlegalstatus) %>%
kbl(., caption = "Capital Asset Ratio by MFI Legal Status in Africa",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE) %>%
footnote(general = "Authors' construction from MIX data",
general_title = "Source: ")
## Running the regressions
### Full dataset
#### Logit
logit_full <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual +
factor(year), data = my_data,
family = binomial("logit"))
#### Probit
probit_full <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual +
factor(year), data = my_data,
family = binomial("probit"))
### Data >= 3 years
#### Logit
logit_3 <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual +
factor(year), data = data3,
family = binomial("logit"))
#### Probit
probit_3 <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual +
factor(year), data = data3,
family = binomial("probit"))
### Data >= 5 years
#### Logit
logit_5 <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual +
factor(year), data = data5,
family = binomial("logit"))
#### Probit
probit_5 <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual +
factor(year), data = data5,
family = binomial("probit"))
### Pooled logit
logit_pooled <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual,
data = my_data, family = binomial("logit"))
### Pooled probit
probit_pooled <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual,
data = my_data, family = binomial("probit"))
## Write out the models using stargazer
stargazer(logit_full, probit_full, logit_3, probit_3, logit_5, probit_5, logit_pooled, probit_pooled, title = "Regression Results - Logit and Probit Models [Coefficients]", font.size = "footnotesize", header = FALSE, omit = "^factor.", add.lines = list(c("Year Effects", "Yes", "Yes", "Yes", "Yes", "Yes", "Yes", "No", "No"),
c("Deviance", "677***", "664***", "651***", "648***", "660***", "659***", "619***", "607***"), c("df", "29", "29", "29", "29", "29", "29", "9", "9"),
c("Data", "Full", "Full", ">3yrs", ">3yrs", ">5yrs", ">5yrs", "Full", "Full")))
## Full dataset
multinom_full <- multinom(currentlegalstatus ~ age + legal_tradition + assets + kkm + pcrdbgdp + stmktcap + gdp_growth_annual + factor(year), data = my_data)
## Full dataset without cooperatives
multinom_no_coop <- multinom(currentlegalstatus ~ age + legal_tradition + assets + kkm + pcrdbgdp + stmktcap + gdp_growth_annual + factor(year), data = (my_data %>% filter(currentlegalstatus != "Credit Union/ Cooperative ")))
## Full dataset no year effects
multinom_full_ny <- multinom(currentlegalstatus ~ age + legal_tradition + assets + kkm + pcrdbgdp + stmktcap + gdp_growth_annual, data = my_data)
## Full dataset without Cooperatives and Without year effects
multinom_full_no_coop_ny <- multinom(currentlegalstatus ~ age + legal_tradition + assets + kkm + pcrdbgdp + stmktcap + gdp_growth_annual, data = (my_data %>% filter(currentlegalstatus != "Credit Union/ Cooperative ")))
prediction <- predict(logit_full, type = "response") %>%
tibble()
names(prediction) <- "prob"
prediction <- prediction %>%
mutate(class = case_when(prob >= 0.5 ~ "others",
TRUE ~ "NGO"))
prediction$class <- factor(prediction$class, levels = levels(my_data$currentlegaldummy))
#### Confusion matrix names
conf_names <- confusionMatrix(prediction$class, my_data$currentlegaldummy) %>%
ConfusionTableR::binary_class_cm() %>%
select(-cm_ts) %>%
rename(NoInformationRate = AccuracyNull) %>%
t() %>% rownames() %>%
tibble()
names(conf_names) <- "Description"
## Confusion matrix numbers
conf_numbers <- confusionMatrix(prediction$class, my_data$currentlegaldummy) %>%
ConfusionTableR::binary_class_cm() %>%
select(-cm_ts) %>%
t() %>%
sprintf("%.3f", .) %>%
tibble()
names(conf_numbers) <- "Value"
#print(confusionMatrix(prediction$class, data$currentlegaldummy),
#mode = "everything", digits = 2, printstats = TRUE)
table <- cbind(conf_names, conf_numbers)
#colnames(table) <- c("Description", "Value")
head(table, 22) %>%
kbl(., caption = "Confusion Matrix and Statistics for the Logit Model",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE) %>%
footnote(general = "Authors' construction",
general_title = "Source: ",
number = "Accuracy > NoInformationRate is significant at 1% confidence level, p = 0.0000",
number_title = "Notes: ")
multinom_predict <- predict(multinom_full)
conf_matrix <- confusionMatrix(my_data$currentlegalstatus, multinom_predict)
######## MFI classes
mfis <- c("NGO", "Bank", "NBFI", "Coop", "Rural Bank")
####### Metrics
Accuracy <- c(rep(0.565, 5))
NoInformationRate <- rep(0.393, 5)
Kappa <- rep(0.414, 5)
sensitivity <- c(0.618, 0.6154, 0.478, 0.584, 0.5930)
specificity <- c(0.814, 0.9298, 0.801, 0.886, 0.9922)
PosPredValue <- c(0.437, 0.5170, 0.474, 0.768, 0.7391)
NegPredValue <- c(0.901, 0.9520, 0.803, 0.767, 0.9849)
Prevalence <- c(0.189, 0.1087, 0.274, 0.393, 0.0360)
DetectionRate <- c(0.117, 0.0669, 0.131, 0.229, 0.0213)
DetectionPrevalence <- c(0.268, 0.1294, 0.276, 0.298, 0.0289)
BalancedAccuracy <- c(0.716, 0.7726, 0.639, 0.735, 0.7926)
#####df
df <- rbind(Accuracy, NoInformationRate, Kappa, sensitivity, specificity, PosPredValue, NegPredValue, Prevalence, DetectionRate, DetectionPrevalence, BalancedAccuracy) %>%
data.frame()
names(df) <- mfis
df %>%
kableExtra::kbl(., caption = "Confusion Matrix and Statistics for the Multinomial Logit Model",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE) %>%
footnote(general = "Authors' construction",
general_title = "Source: ",
number = "Accuracy > NoInformationRate is significant at 1% confidence level, p = 0.0000",
number_title = "Notes: ")
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.10, .90), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
data_wins <- sapply(my_data[,10:16], remove_outliers) %>%
cbind(my_data[,c(1:9, 17, 18)]) %>%
na.omit() %>%
relocate(mfiid:count)
logit_full_wins <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual +
factor(year), data = data_wins,
family = binomial("logit"))
#### Probit
probit_full_wins <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual +
factor(year), data = data_wins,
family = binomial("probit"))
logit_full_wins_ny <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual,
data = data_wins,
family = binomial("logit"))
#### Probit
probit_full_wins_ny <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual,
data = data_wins,
family = binomial("probit"))
## Write out the models using stargazer
stargazer(logit_full_wins, probit_full_wins, logit_full_wins_ny, probit_full_wins_ny, title = "Regression Results - Logit and Probit Models for Winsorized Data", font.size = "footnotesize", header = FALSE, omit = "^factor.", add.lines = list(c("Year Effects", "Yes", "Yes", "No", "No"),
c("Deviance", "664***", "657***", "602***", "595***"), c("df", "29", "29", "9", "9"), c("Data", "Winsorized", "Winsorized", "Winsorized", "Winsorized")))
plot(logit_full, which = 4, id.n = 3, main = "")
car::vif(logit_full) %>%
kbl(., caption = "Variance Inflation Factors for Logit Model",
booktabs = TRUE) %>%
kable_paper(full_width = TRUE) %>%
footnote(general = "Authors' construction",
general_title = "Source: ")
## Select only continuous variables
linearity <- my_data %>%
select(where(is.numeric), -mfiid, -year, -prbonds, -dummy, -count)
## Select names of the numeric predictors
predictors <- names(linearity)
## Predict from the model
probabilities <- predict(logit_full, type = "response")
predicted.classes <- ifelse(probabilities > 0.5, "others", "NGO") %>%
factor(levels = levels(my_data %>% select(currentlegaldummy)))
# Bind the logit and tidying the data for plot
linearity <- linearity %>%
mutate(logit = log(probabilities/(1-probabilities))) %>%
gather(key = "predictors", value = "predictor.value", -logit)
ggplot(linearity, aes(logit, predictor.value))+
geom_point(size = 0.5, alpha = 0.5) +
geom_smooth(method = "loess") +
theme_bw() +
facet_wrap(~predictors, scales = "free_y") +
ggtitle("")
### Pooled logit
logit_pooled_no_coop <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual + factor(year),
data = (my_data %>% filter(currentlegalstatus != "Credit Union/ Cooperative ")), family = binomial("logit"))
### Pooled probit
probit_pooled_no_coop <- glm(dummy ~ age + legal_tradition +
assets + kkm +
pcrdbgdp + stmktcap + gdp_growth_annual + factor(year),
data = (my_data %>% filter(currentlegalstatus != "Credit Union/ Cooperative ")), family = binomial("probit"))
stargazer(logit_pooled_no_coop, probit_pooled_no_coop, title = "Regression Results - Logit and Probit Models with Data Excluding Cooperatives", font.size = "footnotesize", header = FALSE, omit = "^factor.", add.lines = list(c("Year Effects", "Yes", "Yes"),
c("Deviance", "664***", "657***"), c("df", "29", "29"), c("Data", "No Credit Unions", "No Credit Unions")))
## Results
stargazer(multinom_full, title = "Regression Results - Multinomial Logit Model- Full Data", font.size = "footnotesize", header = FALSE, omit = "^factor.", add.lines = list(c("Year Effects", "Yes", "Yes", "Yes", "Yes", "Yes"), c("Data", "Full", "Full", "Full", "Full", "Full")))
## Results
stargazer(multinom_no_coop, title = "Regression Results - Multinomial Logit Model- Full Data Without Cooperatives", font.size = "footnotesize", header = FALSE, omit = "^factor.", add.lines = list(c("Year Effects", "Yes", "Yes", "Yes", "Yes", "Yes"), c("Data", "Full", "Full", "Full", "Full", "Full")))
## Results
stargazer(multinom_full_ny, title = "Regression Results - Multinomial Logit Model- Full Data Without Year Effects", font.size = "footnotesize", header = FALSE, omit = "^factor.", add.lines = list(c("Year Effects", "Yes", "No", "No", "No", "No"), c("Data", "No Coop", "No Coop", "No Coop", "No Coop", "No Coop")))
## Results
stargazer(multinom_full_no_coop_ny, title = "Regression Results - Multinomial Logit Model- Full Data Excluding Cooperatives and Year Effects", font.size = "footnotesize", header = FALSE, omit = "^factor.", add.lines = list(c("Year Effects", "No", "No", "No", "No", "No"), c("Data", "Full", "Full", "Full", "Full", "Full")))
legal %>% rename(Country = country, Legal_Tradition = trad) %>%
mutate(Legal_Tradition = case_when(
Legal_Tradition == "civil" ~ "Civil",
Legal_Tradition == "common" ~ "Common",
TRUE ~ "Others")) %>%
arrange(Legal_Tradition, Country) %>%
kbl(., caption = "Legal Traditions in Africa",
booktabs = TRUE) %>%
kable_paper(full_width = FALSE, font_size = 7) %>%
footnote(general = "Oto-Peralías and Romero-Ávila (2014)",
general_title = "Source: ",
number = c("Other legal traditions include Spanish, Portuguese, Belgian, and Italian", "Ethiopia is a peculiar case of a country in Africa that was not colonised"),
number_title = "Note: ")
